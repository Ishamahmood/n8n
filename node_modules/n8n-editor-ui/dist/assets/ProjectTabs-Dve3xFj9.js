import { d as defineComponent, U as useRoute, a1 as useProjectsStore, r as ref, p as computed, H as watch, c as openBlock, h as createElementBlock, i as createVNode, n as normalizeClass, l as resolveComponent, am as getResourcePermissions, V as VIEWS, dF as ProjectTypes, g as useI18n, _ as _export_sfc } from "./index-7YFQEQmt.js";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "ProjectTabs",
  setup(__props) {
    const locale = useI18n();
    const route = useRoute();
    const projectsStore = useProjectsStore();
    const selectedTab = ref("");
    const projectPermissions = computed(
      () => {
        var _a;
        return getResourcePermissions((_a = projectsStore.currentProject) == null ? void 0 : _a.scopes).project;
      }
    );
    const options = computed(() => {
      var _a, _b;
      const projectId = (_a = route == null ? void 0 : route.params) == null ? void 0 : _a.projectId;
      const to = projectId ? {
        workflows: {
          name: VIEWS.PROJECTS_WORKFLOWS,
          params: { projectId }
        },
        credentials: {
          name: VIEWS.PROJECTS_CREDENTIALS,
          params: { projectId }
        }
      } : {
        workflows: {
          name: VIEWS.WORKFLOWS
        },
        credentials: {
          name: VIEWS.CREDENTIALS
        }
      };
      const tabs = [
        {
          label: locale.baseText("mainSidebar.workflows"),
          value: to.workflows.name,
          to: to.workflows
        },
        {
          label: locale.baseText("mainSidebar.credentials"),
          value: to.credentials.name,
          to: to.credentials
        }
      ];
      if (projectId && projectPermissions.value.update && ((_b = projectsStore.currentProject) == null ? void 0 : _b.type) === ProjectTypes.Team) {
        tabs.push({
          label: locale.baseText("projects.settings"),
          value: VIEWS.PROJECT_SETTINGS,
          to: { name: VIEWS.PROJECT_SETTINGS, params: { projectId } }
        });
      }
      return tabs;
    });
    watch(
      () => route == null ? void 0 : route.name,
      () => {
        selectedTab.value = route == null ? void 0 : route.name;
      },
      { immediate: true }
    );
    return (_ctx, _cache) => {
      const _component_N8nTabs = resolveComponent("N8nTabs");
      return openBlock(), createElementBlock("div", {
        class: normalizeClass(_ctx.$style.projectTabs)
      }, [
        createVNode(_component_N8nTabs, {
          modelValue: selectedTab.value,
          "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => selectedTab.value = $event),
          options: options.value,
          "data-test-id": "project-tabs"
        }, null, 8, ["modelValue", "options"])
      ], 2);
    };
  }
});
const projectTabs = "_projectTabs_1nw28_1";
const style0 = {
  projectTabs
};
const cssModules = {
  "$style": style0
};
const ProjectTabs = /* @__PURE__ */ _export_sfc(_sfc_main, [["__cssModules", cssModules]]);
export {
  ProjectTabs as P
};
