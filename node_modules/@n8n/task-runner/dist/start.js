"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const n8n_workflow_1 = require("n8n-workflow");
const typedi_1 = __importDefault(require("typedi"));
const main_config_1 = require("./config/main-config");
const js_task_runner_1 = require("./js-task-runner/js-task-runner");
let runner;
let isShuttingDown = false;
function createSignalHandler(signal) {
    return async function onSignal() {
        if (isShuttingDown) {
            return;
        }
        console.log(`Received ${signal} signal, shutting down...`);
        isShuttingDown = true;
        try {
            if (runner) {
                await runner.stop();
                runner = undefined;
            }
        }
        catch (e) {
            const error = (0, n8n_workflow_1.ensureError)(e);
            console.error('Error stopping task runner', { error });
        }
        finally {
            process.exit(0);
        }
    };
}
void (async function start() {
    const config = typedi_1.default.get(main_config_1.MainConfig);
    runner = new js_task_runner_1.JsTaskRunner(config);
    process.on('SIGINT', createSignalHandler('SIGINT'));
    process.on('SIGTERM', createSignalHandler('SIGTERM'));
})().catch((e) => {
    const error = (0, n8n_workflow_1.ensureError)(e);
    console.error('Task runner failed to start', { error });
    process.exit(1);
});
//# sourceMappingURL=start.js.map