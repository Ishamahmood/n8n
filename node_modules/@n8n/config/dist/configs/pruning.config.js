"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PruningConfig = void 0;
const decorators_1 = require("../decorators");
let PruningConfig = class PruningConfig {
    constructor() {
        this.isEnabled = true;
        this.maxAge = 336;
        this.maxCount = 10_000;
        this.hardDeleteBuffer = 1;
        this.hardDeleteInterval = 15;
        this.softDeleteInterval = 60;
    }
};
exports.PruningConfig = PruningConfig;
__decorate([
    (0, decorators_1.Env)('EXECUTIONS_DATA_PRUNE'),
    __metadata("design:type", Boolean)
], PruningConfig.prototype, "isEnabled", void 0);
__decorate([
    (0, decorators_1.Env)('EXECUTIONS_DATA_MAX_AGE'),
    __metadata("design:type", Number)
], PruningConfig.prototype, "maxAge", void 0);
__decorate([
    (0, decorators_1.Env)('EXECUTIONS_DATA_PRUNE_MAX_COUNT'),
    __metadata("design:type", Number)
], PruningConfig.prototype, "maxCount", void 0);
__decorate([
    (0, decorators_1.Env)('EXECUTIONS_DATA_HARD_DELETE_BUFFER'),
    __metadata("design:type", Number)
], PruningConfig.prototype, "hardDeleteBuffer", void 0);
__decorate([
    (0, decorators_1.Env)('EXECUTIONS_DATA_PRUNE_HARD_DELETE_INTERVAL'),
    __metadata("design:type", Number)
], PruningConfig.prototype, "hardDeleteInterval", void 0);
__decorate([
    (0, decorators_1.Env)('EXECUTIONS_DATA_PRUNE_SOFT_DELETE_INTERVAL'),
    __metadata("design:type", Number)
], PruningConfig.prototype, "softDeleteInterval", void 0);
exports.PruningConfig = PruningConfig = __decorate([
    decorators_1.Config
], PruningConfig);
//# sourceMappingURL=pruning.config.js.map