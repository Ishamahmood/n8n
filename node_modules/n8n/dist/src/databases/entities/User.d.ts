import type { IUser } from 'n8n-workflow';
import { IPersonalizationSurveyAnswers, IUserSettings } from '../..';
import { Role } from './Role';
import { SharedWorkflow } from './SharedWorkflow';
import { SharedCredentials } from './SharedCredentials';
export declare const MIN_PASSWORD_LENGTH = 8;
export declare const MAX_PASSWORD_LENGTH = 64;
export declare class User implements IUser {
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    password: string;
    resetPasswordToken?: string | null;
    resetPasswordTokenExpiration?: number | null;
    personalizationAnswers: IPersonalizationSurveyAnswers | null;
    settings: IUserSettings | null;
    globalRole: Role;
    sharedWorkflows: SharedWorkflow[];
    sharedCredentials: SharedCredentials[];
    createdAt: Date;
    updatedAt: Date;
    preUpsertHook(): void;
    apiKey?: string | null;
    isPending: boolean;
    computeIsPending(): void;
}
